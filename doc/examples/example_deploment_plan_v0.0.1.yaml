infrastructure:
  management:
    type: rhev
    endpoint: https://rhev.example.com/api
    credentials:
      username: myuser
      password: mypass
    networks:
      rhevm:
        ip_pool:
          from: 192.168.254.11
          to: 192.168.254.245
        ip_netmask: 255.255.255.0
        ip_defgw: 192.168.254.254
      production:
        ip_pool:
          from: 192.168.254.11
          to: 192.168.254.245
        ip_netmask: 255.255.255.0
        ip_defgw: 192.168.254.254

  lamp:
    type: openstack
    endpoint: https://openstack.example.com/api
    credentials:
      username: myuser
      password: mypass
    networks:
      management:
        ip_pool:
          from: 192.168.253.11
          to: 192.168.253.245
        ip_netmask: 255.255.255.0
        ip_defgw: 192.168.253.254
      production:
        ip_pool:
          from: 192.168.1.101
          to: 192.168.1.245
        ip_netmask: 255.255.255.0
        ip_defgw: 192.168.1.254

nodes:
  mgt01.example.com:
    infrastructure: management
    infrastructure_properties:
      affinity_group: group1
      keep_ha: true
    image: rhel6cloudinit
    interfaces:
      eth0:
        network: rhevm
        ip: 192.168.254.12

  mysql01.example.com:
    infrastructure: lamp
    infrastructure_properties:
      affinity_group: group1
      keep_ha: true
    image: rhel6cloudinit
    flavor: medium
    interfaces:
      eth0:
        network: management
        ip: 192.168.253.25
      eth1:
        network: production
        ip: 192.168.1.102
    disks:
      - name: rdo
        pool: storage_pool1
        size: 4000M
      - name: db1
        pool: storage_pool1
        size: 20G

  web01.example.com:
    infrastructure: lamp
    infrastructure_properties:
      affinity_group: group1
      keep_ha: false
    image: rhel6
    flavor: small
    interfaces:
      eth0:
        network: management
        ip: 192.168.253.26
      eth1:
        network: production
        ip: dhcp
  
  web02.example.com:
    infrastructure: lamp
    infrastructure_properties:
      affinity_group: group1
      keep_ha: false
    image: rhel6
    flavor: medium
    interfaces:
      eth0:
        network: management
        ip: 192.168.253.27
      eth1:
        network: production
        ip: 192.168.1.103

  haproxy01.example.com:
    infrastructure: lamp
    infrastructure_properties:
      affinity_group: group1
      keep_ha: true
    image: rhel6cloudinit
    flavor: small
    interfaces:
      eth0:
        network: management
        ip: 192.168.253.28
      eth1:
        network: production
        ip: dhcp

configuration:
  nodes:
    mysql01.example.com:
      my_role: mysql
    web01.example.com:
      my_role: httpd_basic
    web02.example.com:
      my_role: httpd_special
    haproxy01.example.com:
      my_role: haproxy
  roles:
    mysql:
      mysql::default_database:
         name: mydatabase
         user: myuser
         password: mypass

plan:
  max_in_flight: 2

steps:

    - name: 'Make sure we can login to all nodes'
      nodes: all
      command:
          plugin: ssh/wait_for_login
          plugin_timeout: 600

    - name: 'Install Puppet'
      nodes: all
      command:
          plugin: ssh/custom
          verify_commands:
              - plugin: ssh/file_exists
                file: /usr/bin/puppet
          exec: yum
          arguments: 'install puppet'
          expect_exit_codes: 0
          fail_on_warning: False
          parse_output:
              error:
                  - '^No package puppet available'

    - name: 'Initial Puppet run to configure puppet'
      nodes: all
      command:
          plugin: ssh/puppet_agent_run
          verify_commands:
              - plugin: ssh/egrep
                file: /etc/puppet/puppet.conf
                pattern: puppet.example.com
          arguments:
              - '--server puppet.example.com'
              - '--environment production'
              - '--tags puppet::client'

    - name: 'Configure the MySQL server'
      nodes:
          - mysql01.example.com
      command: ssh/puppet_agent_run

    - name: 'Configure the Webservers'
      roles:
          - httpd_basic
          - httpd_special
      command: ssh/puppet_agent_run

    - name: 'Configure the HA Proxy'
      roles:
          - haproxy
      command: ssh/puppet_agent_run


