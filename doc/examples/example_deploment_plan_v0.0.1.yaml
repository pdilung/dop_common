infrastructure:
  management:
    type: rhev
    endpoint: https://rhev.example.com/api
    credentials:
      username: myuser
      password: mypass
    networks:
      rhevm:
        ip_pool:
          from: 192.168.254.11
          to: 192.168.254.245
        ip_netmask: 255.255.255.0
        ip_defgw: 192.168.254.254
      production:
        ip_pool:
          from: 192.168.254.11
          to: 192.168.254.245
        ip_netmask: 255.255.255.0
        ip_defgw: 192.168.254.254

  lamp:
    type: openstack
    endpoint: https://openstack.example.com/api
    credentials:
      username: myuser
      password: mypass
    networks:
      net1:
        id: management
        ip_pool:
          from: 192.168.253.11
          to: 192.168.253.245
        ip_netmask: 255.255.255.0
        ip_defgw: 192.168.253.254
      net2:
        id: production
        ip_pool:
          from: 192.168.1.101
          to: 192.168.1.245
        ip_netmask: 255.255.255.0
        ip_defgw: 192.168.1.254

nodes:
  mgt01.example.com:
    infrastructure: management
    infrastructure_properties:
      affinity_group: group1
      keep_ha: true
    image: rhel6cloudinit
    nics:
      nic1:
        int: eth0
        network: net1
        ip: 192.168.254.12

  mysql01.example.com:
    infrastructure: lamp
    infrastructure_properties:
      affinity_group: group1
      keep_ha: true
    image: rhel6cloudinit
    flavor: medium
    nics:
      nic1:
        network: net1
        int: eth0
        ip: 192.168.253.25
      nic2:
        network: net2
        int: eth1
        ip: 192.168.1.102
    disks:
      - name: rdo
        pool: storage_pool1
        size: 4000M
      - name: db1
        pool: storage_pool1
        size: 20G

  web01.example.com:
    infrastructure: lamp
    infrastructure_properties:
      affinity_group: group1
      keep_ha: false
    image: rhel6
    flavor: small
    nics:
      nic1:
        network: net1
        int: eth0
        ip: 192.168.253.26
      nic2:
        network: net2
        int: eth1
        ip: dhcp
  
  web02.example.com:
    infrastructure: lamp
    infrastructure_properties:
      affinity_group: group1
      keep_ha: false
    image: rhel6
    flavor: medium
    nics:
      nic1:
        network: net1
        int: eth0
        ip: 192.168.253.27
      nic2:
        network: net2
        int: eth1
        ip: 192.168.1.103

  haproxy01.example.com:
    infrastructure: lamp
    infrastructure_properties:
      affinity_group: group1
      keep_ha: true
    image: rhel6cloudinit
    flavor: small
    nics:
      nic1:
        network: net1
        int: eth0
        ip: 192.168.253.28
      nic2:
        network: net2
        int: eth1
        ip: dhcp

configuration:
  nodes:
    mysql01.example.com:
      my_role: mysql
    web01.example.com:
      my_role: httpd_basic
    web02.example.com:
      my_role: httpd_special
    haproxy01.example.com:
      my_role: haproxy
  roles:
    mysql:
      mysql::default_database:
         name: mydatabase
         user: myuser
         password: mypass

plan:
  max_in_flight: 2

steps:

    - name: test_run
      nodes: all
      command:
          plugin: custom
          exec: "sleep 2"
          arguments: {}
          env:
              ENV1: foo
              ENV2: bla
          node_verify_cmd: /bin/false
          dop_verify_cmd: /bin/false
          expect_exit_code: 0
          fail_on_warning: False
          parse_output:
              error:
                  - '^Error: '
              warning:
                  - '^Warning: '

    - name: ssh_test_run
      nodes:
        - mysql01.example.com
      command:
          plugin: ssh_custom
          exec: "echo 'Warning: bla bla'"
          arguments: {}
          env:
              ENV1: foo
              ENV2: bla
          node_verify_cmd: /bin/false
          dop_verify_cmd: /bin/false
          expect_exit_code: 255
          fail_on_warning: False
          parse_output:
              error:
                  - '^Error: '
              warning:
                  - '^Warning: '

    - name: run_puppet
      nodes: all
      command:
          plugin: ssh_puppet_run
          arguments:
              '--noop':

    - name: run_puppet2
      nodes: all
      command: ssh_puppet_run

